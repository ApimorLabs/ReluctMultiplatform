<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues></ManuallySuppressedIssues>
  <CurrentIssues>
    <ID>CommentSpacing:ComposeExtensions.kt$//https://issuetracker.google.com/issues/338842143</ID>
    <ID>CommentSpacing:ComposeMultiplatformAppPlugin.kt$//https://wixtoolset.org/documentation/manual/v3/howtos/general/generate_guids.html</ID>
    <ID>CommentSpacing:build.gradle.kts$//Projects</ID>
    <ID>EmptyFunctionBlock:GoalsDaoImplTest.kt$GoalsDaoImplTest${ }</ID>
    <ID>EmptyFunctionBlock:TasksDaoImplTest.kt$TasksDaoImplTest${ }</ID>
    <ID>FinalNewline:Android.kt$work.racka.reluct.extensions.Android.kt</ID>
    <ID>FinalNewline:ComposeExtensions.kt$work.racka.reluct.extensions.ComposeExtensions.kt</ID>
    <ID>FinalNewline:FakeGoalsDao.kt$work.racka.reluct.data.source.database.dao.goals.FakeGoalsDao.kt</ID>
    <ID>FinalNewline:FakeTasksDao.kt$work.racka.reluct.data.source.database.dao.tasks.FakeTasksDao.kt</ID>
    <ID>FinalNewline:GetDatabaseWrapper.android.kt$work.racka.reluct.data.source.di.GetDatabaseWrapper.android.kt</ID>
    <ID>FinalNewline:GetDatabaseWrapper.desktop.kt$work.racka.reluct.data.source.di.GetDatabaseWrapper.desktop.kt</ID>
    <ID>FinalNewline:GetDatabaseWrapper.kt$work.racka.reluct.data.source.di.GetDatabaseWrapper.kt</ID>
    <ID>FinalNewline:GoalsDaoImplTest.kt$work.racka.reluct.data.source.database.dao.goals.GoalsDaoImplTest.kt</ID>
    <ID>FinalNewline:GoalsTestData.kt$work.racka.reluct.data.source.testData.GoalsTestData.kt</ID>
    <ID>FinalNewline:KmpExtensions.kt$work.racka.reluct.extensions.KmpExtensions.kt</ID>
    <ID>FinalNewline:Kotlin.kt$work.racka.reluct.extensions.Kotlin.kt</ID>
    <ID>FinalNewline:TasksDaoImplTest.kt$work.racka.reluct.data.source.database.dao.tasks.TasksDaoImplTest.kt</ID>
    <ID>FinalNewline:TasksTestData.kt$work.racka.reluct.data.source.testData.TasksTestData.kt</ID>
    <ID>FinalNewline:Versions.kt$work.racka.reluct.extensions.Versions.kt</ID>
    <ID>FinalNewline:VersionsCatalog.kt$work.racka.reluct.extensions.VersionsCatalog.kt</ID>
    <ID>FinalNewline:build.gradle.kts$.build.gradle.kts</ID>
    <ID>FinalNewline:settings.gradle.kts$.settings.gradle.kts</ID>
    <ID>KdocWrapping:DesktopHapticFeedback.kt$DesktopHapticFeedback$/** ACTION **/</ID>
    <ID>MayBeConst:Versions.kt$Versions$val DESKTOP_PACKAGE_NAME = "Reluct"</ID>
    <ID>MayBeConst:Versions.kt$Versions$val DESKTOP_VERSION = "1.0.0"</ID>
    <ID>MayBeConst:Versions.kt$Versions$val MIN_SDK = 26</ID>
    <ID>MayBeConst:Versions.kt$Versions$val PACKAGE_NAME = "work.racka.reluct"</ID>
    <ID>MayBeConst:Versions.kt$Versions$val TARGET_SDK = 34</ID>
    <ID>MayBeConst:Versions.kt$Versions$val VERSION_CODE = 1</ID>
    <ID>MayBeConst:Versions.kt$Versions$val VERSION_NAME = "1.0.0"</ID>
    <ID>NewLineAtEndOfFile:Android.kt$work.racka.reluct.extensions.Android.kt</ID>
    <ID>NewLineAtEndOfFile:ComposeExtensions.kt$work.racka.reluct.extensions.ComposeExtensions.kt</ID>
    <ID>NewLineAtEndOfFile:FakeGoalsDao.kt$work.racka.reluct.data.source.database.dao.goals.FakeGoalsDao.kt</ID>
    <ID>NewLineAtEndOfFile:FakeTasksDao.kt$work.racka.reluct.data.source.database.dao.tasks.FakeTasksDao.kt</ID>
    <ID>NewLineAtEndOfFile:GetDatabaseWrapper.android.kt$work.racka.reluct.data.source.di.GetDatabaseWrapper.android.kt</ID>
    <ID>NewLineAtEndOfFile:GetDatabaseWrapper.desktop.kt$work.racka.reluct.data.source.di.GetDatabaseWrapper.desktop.kt</ID>
    <ID>NewLineAtEndOfFile:GetDatabaseWrapper.kt$work.racka.reluct.data.source.di.GetDatabaseWrapper.kt</ID>
    <ID>NewLineAtEndOfFile:GoalsDaoImplTest.kt$work.racka.reluct.data.source.database.dao.goals.GoalsDaoImplTest.kt</ID>
    <ID>NewLineAtEndOfFile:GoalsTestData.kt$work.racka.reluct.data.source.testData.GoalsTestData.kt</ID>
    <ID>NewLineAtEndOfFile:KmpExtensions.kt$work.racka.reluct.extensions.KmpExtensions.kt</ID>
    <ID>NewLineAtEndOfFile:Kotlin.kt$work.racka.reluct.extensions.Kotlin.kt</ID>
    <ID>NewLineAtEndOfFile:TasksDaoImplTest.kt$work.racka.reluct.data.source.database.dao.tasks.TasksDaoImplTest.kt</ID>
    <ID>NewLineAtEndOfFile:TasksTestData.kt$work.racka.reluct.data.source.testData.TasksTestData.kt</ID>
    <ID>NewLineAtEndOfFile:Versions.kt$work.racka.reluct.extensions.Versions.kt</ID>
    <ID>NewLineAtEndOfFile:VersionsCatalog.kt$work.racka.reluct.extensions.VersionsCatalog.kt</ID>
    <ID>NewLineAtEndOfFile:build.gradle.kts$.build.gradle.kts</ID>
    <ID>NewLineAtEndOfFile:settings.gradle.kts$.settings.gradle.kts</ID>
    <ID>NoBlankLineBeforeRbrace:ComposeMultiplatformAppPlugin.kt$ComposeMultiplatformAppPlugin$ </ID>
    <ID>NoBlankLineBeforeRbrace:ComposeMultiplatformLibPlugin.kt$ComposeMultiplatformLibPlugin$ </ID>
    <ID>NoBlankLineBeforeRbrace:build.gradle.kts$ </ID>
    <ID>NoConsecutiveBlankLines:ComposeExtensions.kt$ </ID>
    <ID>NoConsecutiveBlankLines:ComposeMultiplatformLibPlugin.kt$ </ID>
    <ID>NoConsecutiveBlankLines:ComposeMultiplatformLibPlugin.kt$ComposeMultiplatformLibPlugin$ </ID>
    <ID>NoConsecutiveBlankLines:KotlinMultiplatformLibPlugin.kt$ </ID>
    <ID>NoConsecutiveBlankLines:KotlinMultiplatformLibPlugin.kt$KotlinMultiplatformLibPlugin$ </ID>
    <ID>NoConsecutiveBlankLines:build.gradle.kts$ </ID>
    <ID>NoEmptyFirstLineInMethodBlock:ComposeExtensions.kt$ </ID>
    <ID>NoEmptyFirstLineInMethodBlock:ComposeMultiplatformAppPlugin.kt$ComposeMultiplatformAppPlugin$ </ID>
    <ID>UnusedPrivateProperty:build.gradle.kts$val androidMain by getting { dependencies { implementation(libs.koin.android) } }</ID>
    <ID>UnusedPrivateProperty:build.gradle.kts$val androidMain by getting { dependencies { implementation(libs.sqldelight.android.driver) } }</ID>
    <ID>UnusedPrivateProperty:build.gradle.kts$val androidUnitTest by getting { dependencies { implementation(libs.sqldelight.sqlite.driver) } }</ID>
    <ID>UnusedPrivateProperty:build.gradle.kts$val commonMain by getting { dependencies { //Projects implementation(project(":data-model")) // Normal deps implementation(libs.kotlinx.serialization.core) implementation(libs.coroutines.core) } }</ID>
    <ID>UnusedPrivateProperty:build.gradle.kts$val commonMain by getting { dependencies { //Projects implementation(project(":data-model")) // Normal deps } }</ID>
    <ID>UnusedPrivateProperty:build.gradle.kts$val commonMain by getting { dependencies { //Projects implementation(project(":data-model")) implementation(project(":data-source")) // Normal deps implementation(libs.koin.compose) implementation(libs.koin.compose.viewmodel) implementation(libs.lifecycle.viewmodel) } }</ID>
    <ID>UnusedPrivateProperty:build.gradle.kts$val commonMain by getting { dependencies { //Projects implementation(project(":data-model")) implementation(project(":data-source")) implementation(project(":domain")) implementation(project(":features")) implementation(project(":system-services")) // Normal deps implementation(libs.koin.compose) implementation(libs.koin.compose.viewmodel) implementation(libs.lifecycle.viewmodel) } }</ID>
    <ID>UnusedPrivateProperty:build.gradle.kts$val commonMain by getting { dependencies { implementation(libs.kotlinx.serialization.core) api(libs.kotlinx.date.time) api(libs.kotlinx.collections.immutable) } }</ID>
    <ID>UnusedPrivateProperty:build.gradle.kts$val commonMain by getting { dependencies { implementation(project(":common")) } }</ID>
    <ID>UnusedPrivateProperty:build.gradle.kts$val commonMain by getting { dependencies { implementation(project(":data-model")) implementation(libs.kotlinx.serialization.core) implementation(libs.coroutines.core) implementation(libs.sqldelight.runtime) implementation(libs.sqldelight.coroutines) implementation(libs.multiplatform.settings.core) implementation(libs.multiplatform.settings.noArg) } }</ID>
    <ID>UnusedPrivateProperty:build.gradle.kts$val commonTest by getting { dependencies { implementation(libs.koin.test) implementation(libs.coroutines.test) implementation(libs.turbine.test) implementation(libs.multiplatform.settings.test) implementation(kotlin("test")) } }</ID>
    <ID>UnusedPrivateProperty:build.gradle.kts$val desktopMain by getting { dependencies { implementation(libs.sqldelight.sqlite.driver) } }</ID>
  </CurrentIssues>
</SmellBaseline>
