[versions]
# App Configs
android-compileSdk = "34"
android-minSdk = "26"
android-targetSdk = "34"
android-versioncode = "1"
android-versionName = "1.0.0"
app-packagename = "org.example.project"
desktop-current-version = "1.0.1"
desktop-packageName = "org.example.project"

#Important
kotlin = "2.0.0"
compose-plugin = "1.6.11"
progurad-gradle = "7.3.0"
agp = "8.3.0"
moko-resources = "0.20.1"

# Kotlin Helpers
kotlinx-date-time = "0.4.0"
kotlinx-coroutines = "1.6.4"
kotlinx-serialization = "1.3.2"
kotlinx-collections-immutable = "0.3.5"

# Network
ktor = "2.3.12"

# Android Essentials
androidx-activityCompose = "1.9.0"
androidx-appcompat = "1.7.0"
androidx-constraintlayout = "2.1.4"
androidx-core-ktx = "1.13.1"
androidx-espresso-core = "3.6.0"
androidx-material = "1.12.0"
androidx-test-junit = "1.2.0"
androidx-splash-screen = "1.0.0"

# Testing
junit = "4.13.2"

# Lifecycle
androidx-lifecycle = "2.8.3"
androidx-lifecycle-viewmodel-compose = "2.8.3"
androidx-savedstate = "1.2.1"

# Navigation
androidx-navigation = "2.8.0-beta05"
jetbrains-androidx-navigation = "2.8.0-alpha02"

# DI
koin = "3.6.0-Beta5"
koin-compose-multiplatform = "1.2.0-Beta4"

# Square (Block)
sqldelight = "1.5.4" #TODO: Update SQLDelight
turbine = "0.7.0"
leakcanary = "2.9.1"

# Helper libs
coil-image = "2.1.0"
accompanist = "0.27.0"
androidx-workmanager = "2.9.0"

# Preference
multiplatform-settings = "0.9" # TODO: Update settings

# Linter
ktlint_gradle = "11.0.0"
linter_twitter_compose = "0.0.22"
detekt = "1.23.6"

# Extras
lottie = "5.0.3"
palette = "1.0.0"
desugaring = "1.1.8"
jna = "5.12.1"

# Google Services and Firebase
google_services = "4.3.14"
play_services_auth = "20.3.0"
firebase_bom = "31.0.1"
crashlytics_gradle = "2.9.2"

[libraries]

# Kotlin
kotlinx_serialization_core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization" }
kotlinx_serialization_json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx_date_time = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-date-time" }
kotlinx_collections_immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlinx-collections-immutable" }
coroutines_core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
coroutines_android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
coroutines_swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
coroutines_playservices = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "kotlinx-coroutines" }
coroutines_test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }

# Core & Essentials
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidx-espresso-core" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidx-appcompat" }
androidx-material = { group = "com.google.android.material", name = "material", version.ref = "androidx-material" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "androidx-constraintlayout" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
splash_screen_core = { module = "androidx.core:core-splashscreen", version.ref = "androidx-splash-screen" }
moko_resources_core = { module = "dev.icerock.moko:resources", version.ref = "moko-resources" }
moko_resources_compose = { module = "dev.icerock.moko:resources-compose", version.ref = "moko-resources" }
moko_resources_test = { module = "dev.icerock.moko:resources-test", version.ref = "moko-resources" }

# Lifecycle
lifecycle_compose_runtime = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle-viewmodel-compose" }
viewmodel_core = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }
viewmodel_compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
savedstate = { module = "androidx.savedstate:savedstate-ktx", version.ref = "androidx-savedstate" }
lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidx-lifecycle"}

# DI
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin-compose-multiplatform" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin-compose-multiplatform" }

# Navigation
androix_navigation_compose = { module = "androidx.navigation:navigation-compose", version.ref = "androidx-navigation" }
navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "jetbrains-androidx-navigation" }

# Accompanist
accompanist_nav_animations = { module = "com.google.accompanist:accompanist-navigation-animation", version.ref = "accompanist" }
accompanist_pager = { module = "com.google.accompanist:accompanist-pager", version.ref = "accompanist" }
accompanist_swipe_refresh = { module = "com.google.accompanist:accompanist-swiperefresh", version.ref = "accompanist" }
accompanist_system_ui_controller = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanist" }

# Testing - JUnit
junit_core = { group = "junit", name = "junit", version.ref = "junit" }
#junit_test = { module = "androidx.test.ext:junit", version.ref = "junit_test" }
#junit_test_ktx = { module = "androidx.test.ext:junit-ktx", version.ref = "junit_test" }

# Helpers and Extras
coil_compose = { module = "io.coil-kt:coil-compose", version.ref = "coil-image" }
lottie_compose = { module = "com.airbnb.android:lottie-compose", version.ref = "lottie" }
coil_svg = { module = "io.coil-kt:coil-svg", version.ref = "coil-image" }
palette = { module = "androidx.palette:palette-ktx", version.ref = "palette" }
androidx_workmanager = { module = "androidx.work:work-runtime-ktx", version.ref = "androidx-workmanager" }
androidx_workmanager_multiprocess = { module = "androidx.work:work-multiprocess", version.ref = "androidx-workmanager" }
androidx_workmanager_testing = { module = "androidx.work:work-testing", version.ref = "androidx-workmanager" }

# Network (KTOR)
ktor_client_core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor_client_android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor_client_okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor_client_content_negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor_client_serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor_client_serialization_json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor_client_logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }

# Persistence
multiplatform_settings_core = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatform-settings" }
multiplatform_settings_noArg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "multiplatform-settings" }
multiplatform_settings_coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatform-settings" }
multiplatform_settings_test = { module = "com.russhwolf:multiplatform-settings-test", version.ref = "multiplatform-settings" }


# Firebase
firebase_bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase_bom" }
firebase_analytics = { module = "com.google.firebase:firebase-analytics-ktx" }
firebase_crashlytics = { module = "com.google.firebase:firebase-crashlytics-ktx" }
firebase_auth = { module = "com.google.firebase:firebase-auth-ktx" }
firebase_database = { module = "com.google.firebase:firebase-database-ktx" }
firebase_appcheck_integrity = { module = "com.google.firebase:firebase-appcheck-playintegrity" }
playservices_auth = { module = "com.google.android.gms:play-services-auth", version.ref = "play_services_auth" }

# Square (Block)
sqldelight_runtime = { module = "com.squareup.sqldelight:runtime", version.ref = "sqldelight" }
sqldelight_coroutines = { module = "com.squareup.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
sqldelight_android_driver = { module = "com.squareup.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight_sqlite_driver = { module = "com.squareup.sqldelight:sqlite-driver", version.ref = "sqldelight" }
turbine_test = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
leakcanary_android = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakcanary" }

# Linter
detekt_gradle_plugin = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
detekt_formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
ktlint_gradle_plugin = { module = "org.jlleitschuh.gradle:ktlint-gradle", version.ref = "ktlint_gradle" }
ktlint_rule_twitter_compose = { module = "com.twitter.compose.rules:ktlint", version.ref = "linter_twitter_compose" }
detekt_rule_twitter_compose = { module = "com.twitter.compose.rules:detekt", version.ref = "linter_twitter_compose" }

# Java only
jna_core = { module = "net.java.dev.jna:jna", version.ref = "jna"}
jna_platform = { module = "net.java.dev.jna:jna-platform", version.ref = "jna"}

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinSeriazation = { id = "plugin.serialization", version.ref = "kotlin" }
detektGradle = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt"}